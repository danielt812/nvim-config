return {
  -- "mxsdev/nvim-dap-vscode-js",
  -- event = { "VeryLazy" },
  -- dependencies = {
  --   "mfussenegger/nvim-dap",
  -- },
  -- build = "cd ~/.local/share/lazy/vscode-js-debug && npm install --legacy-peer-deps && npx gulp vsDebugServerBundle && mv dist out",
  -- opts = function()
  --   return {
  --     node_path = "node", -- Path of node executable. Defaults to $NODE_PATH, and then "node"
  --     debugger_path = vim.fn.stdpath("data") .. "/mason/packages/js-debug-adapter", -- Path to vscode-js-debug installation.
  --     debugger_cmd = { "js-debug-adapter" }, -- Command to use to launch the debug server. Takes precedence over `node_path` and `debugger_path`.
  --     adapters = {
  --       -- "chrome",
  --       "pwa-node",
  --       "pwa-chrome",
  --       "pwa-msedge",
  --       "node-terminal",
  --       "pwa-extensionHost",
  --       -- "node",
  --     }, -- which adapters to register in nvim-dap
  --     -- log_file_path = "(stdpath cache)/dap_vscode_js.log" -- Path for file logging
  --     -- log_file_level = false -- Logging level for output to file. Set to false to disable file logging.
  --     -- log_console_level = vim.log.levels.ERROR -- Logging level for output to console. Set to false to disable console output.
  --   }
  -- end,
  -- config = function(_, opts)
  --   require("dap-vscode-js").setup(opts)
  --
  --   local exts = {
  --     "javascript",
  --     "typescript",
  --     "javascriptreact",
  --     "typescriptreact",
  --     -- using pwa-chrome
  --     "vue",
  --     "svelte",
  --   }
  --
  --   for _, ext in ipairs(exts) do
  --     require("dap").configurations[ext] = {
  --       {
  --         type = "pwa-node",
  --         request = "launch",
  --         name = "Launch Current File (pwa-node)",
  --         cwd = vim.fn.getcwd(),
  --         args = { "${file}" },
  --         sourceMaps = true,
  --         protocol = "inspector",
  --       },
  --     }
  --   end
  -- end,
}
